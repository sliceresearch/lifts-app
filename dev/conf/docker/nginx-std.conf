
upstream app {
  server 127.0.0.1:8080;
}

server {

  listen 80;
  server_name app;
  tcp_nodelay on;

  location / {

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;

    proxy_buffers 8 32k;
    proxy_buffer_size 64k;

    proxy_pass http://app;
      proxy_redirect off;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;

  }


  ######## file serving

  location /data {
    root /choice-toastar;
    autoindex on;
  }


}


upstream site {
  server localhost:8080;
}

# redirects to HTTPS version

server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name _;
  return 301 https://$host$request_uri;
}

# proper request handling
server {

  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/choice-toastar.assimilate.net/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/choice-toastar.assimilate.net/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


  location / {
    # these headers contains information about original request
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $http_host;
    proxy_pass http://site;
  }

  location /data {
    root .;
    autoindex on;
  }


}
